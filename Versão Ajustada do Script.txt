-- Etapa 1: Validação da variável @DATABASE
IF (@DATABASE = '') SET @DATABASE = NULL;

-- Etapa 2: Criação das tabelas temporárias (com índices)
CREATE TABLE #TMP_FILAS_MENSAGERIA (
    DESCRICAO_FILA VARCHAR(50),
    NOM_FILR VARCHAR(100),
    TIPO VARCHAR(2),
    ORDEM INT
);
CREATE CLUSTERED INDEX IDX_TMP_FILAS_NOM_FILR ON #TMP_FILAS_MENSAGERIA(NOM_FILR);

-- Inserção de filas na tabela temporária
INSERT INTO #TMP_FILAS_MENSAGERIA
SELECT 'NDF Cadastrado', 'FH9.NDFCadastrado', 'DR', 1 UNION
SELECT 'NDF Cadastro Cancelado', 'FH9.NDFcancelado', 'DR', 2 UNION
SELECT 'NDF Antecipado Recebido', 'FH9.NdfLiquidacaoAntecipada', 'DR', 3;

-- Etapa 3: Filtragem de registros na tabela principal
CREATE TABLE #TBFR6002_CTRL_MSGR (
    COD_MENS UNIQUEIDENTIFIER,
    NOM_FILR VARCHAR(100),
    DAT_HOR_INCU DATETIME,
    DAT_HOR_PSST DATETIME,
    DAT_HOR_ERRO DATETIME,
    DAT_HOR_EXCU DATETIME
);
CREATE NONCLUSTERED INDEX IDX_TBFR6002_NOM_FILR ON #TBFR6002_CTRL_MSGR(NOM_FILR, DAT_HOR_INCU);

INSERT INTO #TBFR6002_CTRL_MSGR
SELECT COD_MENS, NOM_FILR, DAT_HOR_INCU, DAT_HOR_PSST, DAT_HOR_ERRO, DAT_HOR_EXCU
FROM utilitario.TBFR6002_CTRL_MSGR (NOLOCK) A
INNER JOIN #TMP_FILAS_MENSAGERIA B ON (A.NOM_FILR = B.NOM_FILR)
WHERE (A.DAT_HOR_INCU >= @DATABASE_START_DATE AND A.DAT_HOR_INCU < @DATABASE_END_DATE);

-- Etapa 4: Processamento de totais e status
-- Total de registros
SELECT FILA = A.NOM_FILR, MERCADO = B.TIPO, TOTAL = COUNT(1)
INTO #TMP_TOTAL
FROM #TBFR6002_CTRL_MSGR A
INNER JOIN #TMP_FILAS_MENSAGERIA B ON (A.NOM_FILR = B.NOM_FILR)
GROUP BY A.NOM_FILR, B.TIPO;

-- Total de processados com sucesso
SELECT FILA = A.NOM_FILR, MERCADO = B.TIPO, PROCESSADOS_SUCESSO = COUNT(1)
INTO #TMP_TOTAL_PROCESSADOS_SUCESSO
FROM #TBFR6002_CTRL_MSGR A
INNER JOIN #TMP_FILAS_MENSAGERIA B ON (A.NOM_FILR = B.NOM_FILR)
WHERE A.DAT_HOR_PSST IS NOT NULL
GROUP BY A.NOM_FILR, B.TIPO;

-- Total de pendentes de processamento
SELECT FILA = A.NOM_FILR, MERCADO = B.TIPO, PENDENTE_PROCESSAMENTO = COUNT(1)
INTO #TMP_TOTAL_PENDENTES_PROCESSAMENTO
FROM #TBFR6002_CTRL_MSGR A
INNER JOIN #TMP_FILAS_MENSAGERIA B ON (A.NOM_FILR = B.NOM_FILR)
WHERE A.DAT_HOR_PSST IS NULL AND A.DAT_HOR_ERRO IS NULL AND A.DAT_HOR_EXCU IS NULL
GROUP BY A.NOM_FILR, B.TIPO;

-- Total de processados com erro
SELECT FILA = A.NOM_FILR, MERCADO = B.TIPO, PROCESSADOS_COM_ERRO_RF = COUNT(1)
INTO #TMP_TOTAL_PROCESSADOS_ERRO
FROM #TBFR6002_CTRL_MSGR A
INNER JOIN #TMP_FILAS_MENSAGERIA B ON (A.NOM_FILR = B.NOM_FILR)
WHERE A.DAT_HOR_PSST IS NULL AND A.DAT_HOR_ERRO IS NOT NULL AND A.DAT_HOR_EXCU IS NULL
GROUP BY A.NOM_FILR, B.TIPO;

-- Etapa 5: Consolidação das informações
CREATE TABLE #MONITORACAO_FILAS_MSG (
    ID UNIQUEIDENTIFIER,
    Fila VARCHAR(100),
    DescricaoFila VARCHAR(50),
    Mercado VARCHAR(2),
    Total INT,
    ProcessadosComSucesso INT,
    PendentesProcessamento INT,
    ProcessadosComErro INT,
    Ordem INT
);

INSERT INTO #MONITORACAO_FILAS_MSG
SELECT NEWID() AS ID,
       A.NOM_FILR,
       A.DESCRICAO_FILA,
       ISNULL(A.TIPO, 0),
       ISNULL(B.TOTAL, 0),
       ISNULL(C.PROCESSADOS_SUCESSO, 0),
       ISNULL(D.PENDENTE_PROCESSAMENTO, 0),
       ISNULL(E.PROCESSADOS_COM_ERRO_RF, 0),
       A.ORDEM
FROM #TMP_FILAS_MENSAGERIA A
LEFT JOIN #TMP_TOTAL B ON A.NOM_FILR = B.FILA
LEFT JOIN #TMP_TOTAL_PROCESSADOS_SUCESSO C ON A.NOM_FILR = C.FILA
LEFT JOIN #TMP_TOTAL_PENDENTES_PROCESSAMENTO D ON A.NOM_FILR = D.FILA
LEFT JOIN #TMP_TOTAL_PROCESSADOS_ERRO E ON A.NOM_FILR = E.FILA;

-- Etapa 6: Exibição final
SELECT ID, Fila, DescricaoFila, Mercado, Total,
       ProcessadosComSucesso, PendentesProcessamento, ProcessadosComErro
FROM #MONITORACAO_FILAS_MSG
ORDER BY Mercado, Ordem ASC, DescricaoFila;

-- Etapa 7: Limpeza das tabelas temporárias
DROP TABLE #TMP_TOTAL;
DROP TABLE #TMP_TOTAL_PROCESSADOS_SUCESSO;
DROP TABLE #TMP_TOTAL_PENDENTES_PROCESSAMENTO;
DROP TABLE #TMP_TOTAL_PROCESSADOS_ERRO;
DROP TABLE #TMP_FILAS_MENSAGERIA;
DROP TABLE #TBFR6002_CTRL_MSGR;
DROP TABLE #MONITORACAO_FILAS_MSG;
